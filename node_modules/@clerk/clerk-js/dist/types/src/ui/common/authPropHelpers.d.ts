import type { DisplayConfigResource } from '@clerk/types';
import type { ParsedQs } from 'qs';
import type { SignInCtx, SignUpCtx } from '../types';
type ExtractAuthUrlKey = keyof Pick<SignUpCtx, 'afterSignUpUrl' | 'afterSignInUrl'> | keyof Pick<SignInCtx, 'afterSignUpUrl' | 'afterSignInUrl'>;
type ExtractAuthPropOptions = {
    queryParams: ParsedQs;
    displayConfig: DisplayConfigResource;
} & ({
    ctx: Omit<SignUpCtx, 'componentName'>;
} | {
    ctx: Omit<SignInCtx, 'componentName'>;
});
/**
 *
 * extractAuthProp(key, options)
 *
 * Retrieve auth redirect props passed through querystring parameters, component props
 * or display config settings.
 *
 * The priority is:
 * Querystring parameters > ClerkJS component props > Display configuration payload
 */
export declare const extractAuthProp: (key: ExtractAuthUrlKey, { ctx, queryParams, displayConfig }: ExtractAuthPropOptions) => string;
interface BuildAuthQueryStringArgs {
    afterSignInUrl?: string;
    afterSignUpUrl?: string;
    displayConfig: DisplayConfigResource;
}
export declare const buildAuthQueryString: (data: BuildAuthQueryStringArgs) => string | null;
export {};
