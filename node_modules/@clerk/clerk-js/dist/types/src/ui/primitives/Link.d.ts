/// <reference types="react" />
import type { PrimitiveProps, StyleVariants } from '../styledSystem';
declare const applyVariants: (props?: {
    variant?: "buttonRegularRegular" | "headingRegularRegular" | "buttonExtraSmallBold" | "buttonSmallRegular" | "buttonRegularMedium" | "extraSmallRegular" | "smallRegular" | "smallMedium" | "smallBold" | "regularRegular" | "regularMedium" | "largeMedium" | "largeBold" | "xlargeMedium" | "xxlargeMedium" | undefined;
    size?: "sm" | "xs" | "xss" | undefined;
    colorScheme?: "primary" | "inherit" | "danger" | "neutral" | undefined;
} | undefined) => (theme: import("../foundations/defaultFoundations").InternalTheme<Readonly<{
    readonly colors: Readonly<{
        readonly colorBackground: "white";
        readonly colorInputBackground: "white";
        readonly colorText: "black";
        readonly colorTextOnPrimaryBackground: "white";
        readonly colorTextSecondary: "rgba(0,0,0,0.65)";
        readonly colorInputText: "black";
        readonly transparent: "transparent";
        readonly white: "white";
        readonly black: "black";
        readonly primary50: "#f0f3ff";
        readonly primary100: "#d1dcff";
        readonly primary200: "#91A7F7";
        readonly primary300: "#6684F5";
        readonly primary400: "#3B62F2";
        readonly primary500: "#103FEF";
        readonly primary600: "#0D33BF";
        readonly primary700: "#0A268F";
        readonly primary800: "#07195F";
        readonly primary900: "#030D30";
        readonly danger50: "#FFE6E5";
        readonly danger100: "#FFB9B8";
        readonly danger200: "#FF8D8A";
        readonly danger300: "#FF605C";
        readonly danger400: "#FF332E";
        readonly danger500: "#FF1D17";
        readonly danger600: "#CC0500";
        readonly danger700: "#990400";
        readonly danger800: "#660300";
        readonly danger900: "#330100";
        readonly warning50: "#FEF9E7";
        readonly warning100: "#FCEEBB";
        readonly warning200: "#FAE28F";
        readonly warning300: "#F8D763";
        readonly warning400: "#F6CC37";
        readonly warning500: "#dca900";
        readonly warning600: "#C49A08";
        readonly warning700: "#937406";
        readonly warning800: "#624D04";
        readonly warning900: "#312702";
        readonly success50: "#EBFAEB";
        readonly success100: "#C6F0C6";
        readonly success200: "#A2E7A2";
        readonly success300: "#7EDD7E";
        readonly success400: "#5AD35A";
        readonly success500: "#35CA35";
        readonly success600: "#2BA12B";
        readonly success700: "#207920";
        readonly success800: "#155115";
        readonly success900: "#0B280B";
        readonly whiteAlpha20: "hsla(0, 0%, 100%, 0.02)";
        readonly whiteAlpha50: "hsla(0, 0%, 100%, 0.04)";
        readonly whiteAlpha100: "hsla(0, 0%, 100%, 0.06)";
        readonly whiteAlpha200: "hsla(0, 0%, 100%, 0.08)";
        readonly whiteAlpha300: "hsla(0, 0%, 100%, 0.16)";
        readonly whiteAlpha400: "hsla(0, 0%, 100%, 0.24)";
        readonly whiteAlpha500: "hsla(0, 0%, 100%, 0.36)";
        readonly whiteAlpha600: "hsla(0, 0%, 100%, 0.48)";
        readonly whiteAlpha700: "hsla(0, 0%, 100%, 0.64)";
        readonly whiteAlpha800: "hsla(0, 0%, 100%, 0.80)";
        readonly whiteAlpha900: "hsla(0, 0%, 100%, 0.92)";
        readonly blackAlpha20: "hsla(0, 0%, 0%, 0.02)";
        readonly blackAlpha50: "hsla(0, 0%, 0%, 0.04)";
        readonly blackAlpha100: "hsla(0, 0%, 0%, 0.06)";
        readonly blackAlpha200: "hsla(0, 0%, 0%, 0.08)";
        readonly blackAlpha300: "hsla(0, 0%, 0%, 0.16)";
        readonly blackAlpha400: "hsla(0, 0%, 0%, 0.24)";
        readonly blackAlpha500: "hsla(0, 0%, 0%, 0.36)";
        readonly blackAlpha600: "hsla(0, 0%, 0%, 0.48)";
        readonly blackAlpha700: "hsla(0, 0%, 0%, 0.64)";
        readonly blackAlpha800: "hsla(0, 0%, 0%, 0.80)";
        readonly blackAlpha900: "hsla(0, 0%, 0%, 0.92)";
        readonly avatarBorder: "hsla(0, 0%, 0%, 0.08)";
        readonly avatarBackground: "hsla(0, 0%, 0%, 0.24)";
        readonly modalBackdrop: "hsla(0, 0%, 0%, 0.64)";
        readonly activeDeviceBackground: "hsla(0, 0%, 100%, 0.08)";
    }>;
    readonly fonts: Readonly<{
        readonly main: "inherit";
        readonly buttons: "inherit";
    }>;
    readonly fontStyles: Readonly<{
        readonly normal: "normal";
    }>;
    readonly fontSizes: Readonly<{
        readonly '2xs': "0.6875rem";
        readonly xs: "0.8125rem";
        readonly sm: "0.875rem";
        readonly md: "1rem";
        readonly lg: "1.125rem";
        readonly xl: "1.25rem";
        readonly '2xl': "2rem";
    }>;
    readonly fontWeights: Readonly<{
        readonly normal: 400;
        readonly medium: 500;
        readonly bold: 600;
    }>;
    readonly letterSpacings: Readonly<{
        readonly tighter: "-0.05em";
        readonly tight: "-0.025em";
        readonly normal: "0";
        readonly wide: "0.025em";
        readonly wider: "0.05em";
        readonly widest: "0.1em";
    }>;
    readonly lineHeights: Readonly<{
        readonly normal: "normal";
        readonly none: 1;
        readonly shortest: 1.1;
        readonly shorter: 1.25;
        readonly short: 1.375;
        readonly base: 1.5;
        readonly tall: 1.625;
        readonly taller: 2;
    }>;
    readonly radii: Readonly<{
        readonly none: "0px";
        readonly circle: "50%";
        readonly sm: "0.25rem";
        readonly md: "0.375rem";
        readonly lg: "0.5rem";
        readonly xl: "1rem";
        readonly '2xl': "1.25rem";
        readonly halfHeight: "99999px";
    }>;
    readonly sizes: Readonly<{
        readonly '0x5': "0.125rem";
        readonly 1: "0.25rem";
        readonly '1x5': "0.375rem";
        readonly 2: "0.5rem";
        readonly '2x5': "0.625rem";
        readonly 3: "0.75rem";
        readonly '3x5': "0.875rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 7: "1.75rem";
        readonly 8: "2rem";
        readonly 9: "2.25rem";
        readonly '9x5': "2.375rem";
        readonly 10: "2.5rem";
        readonly 11: "2.75rem";
        readonly 12: "3rem";
        readonly '12x5': "3.125rem";
        readonly 14: "3.5rem";
        readonly 15: "3.75rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 24: "6rem";
        readonly 48: "12rem";
        readonly 60: "15rem";
        readonly 94: "23.5rem";
        readonly 100: "25rem";
        readonly 120: "30rem";
        readonly 140: "35rem";
        readonly 160: "40rem";
        readonly 176: "44rem";
        readonly 220: "55rem";
        readonly none: "0";
        readonly xxs: "0.5px";
        readonly px: "1px";
    }>;
    readonly space: Readonly<{
        readonly '0x5': "0.125rem";
        readonly 1: "0.25rem";
        readonly '1x5': "0.375rem";
        readonly 2: "0.5rem";
        readonly '2x5': "0.625rem";
        readonly 3: "0.75rem";
        readonly '3x5': "0.875rem";
        readonly 4: "1rem";
        readonly 5: "1.25rem";
        readonly 6: "1.5rem";
        readonly 7: "1.75rem";
        readonly 8: "2rem";
        readonly 9: "2.25rem";
        readonly '9x5': "2.375rem";
        readonly 10: "2.5rem";
        readonly 11: "2.75rem";
        readonly 12: "3rem";
        readonly '12x5': "3.125rem";
        readonly 14: "3.5rem";
        readonly 15: "3.75rem";
        readonly 16: "4rem";
        readonly 20: "5rem";
        readonly 24: "6rem";
        readonly 48: "12rem";
        readonly 60: "15rem";
        readonly 94: "23.5rem";
        readonly 100: "25rem";
        readonly 120: "30rem";
        readonly 140: "35rem";
        readonly 160: "40rem";
        readonly 176: "44rem";
        readonly 220: "55rem";
        readonly none: "0";
        readonly xxs: "0.5px";
        readonly px: "1px";
    }>;
    readonly shadows: Readonly<{
        readonly cardDropShadow: "0px 24px 48px rgba(0, 0, 0, 0.16)";
        readonly boxShadow1: "0px 24px 48px rgba(0, 0, 0, 0.16)";
        readonly fabShadow: "0px 12px 24px rgba(0, 0, 0, 0.32)";
        readonly focusRing: "0 0 0 3px {{color}}";
        readonly focusRingInput: "0 0 0 1px {{color}}";
    }>;
    readonly transitionProperty: Readonly<{
        readonly common: "background-color,border-color,color,fill,stroke,opacity,box-shadow,transform";
    }>;
    readonly transitionTiming: Readonly<{
        readonly common: "ease";
        readonly easeOut: "ease-out";
        readonly slowBezier: "cubic-bezier(0.16, 1, 0.3, 1)";
    }>;
    readonly transitionDuration: Readonly<{
        readonly slowest: "600ms";
        readonly slower: "280ms";
        readonly slow: "200ms";
        readonly fast: "120ms";
        readonly focusRing: "200ms";
        readonly controls: "100ms";
    }>;
    readonly opacity: Readonly<{
        readonly sm: "24%";
        readonly disabled: "50%";
        readonly inactive: "62%";
    }>;
    readonly borders: Readonly<{
        readonly normal: "1px solid";
        readonly heavy: "2px solid";
    }>;
    readonly zIndices: Readonly<{
        readonly navbar: "100";
        readonly fab: "9000";
        readonly modal: "10000";
        readonly dropdown: "11000";
    }>;
    readonly options: {
        readonly fontSmoothing: "auto !important";
    };
}>>) => import("../styledSystem/types").StyleRule;
type OwnProps = {
    isExternal?: boolean;
    isDisabled?: boolean;
};
export type LinkProps = PrimitiveProps<'a'> & OwnProps & StyleVariants<typeof applyVariants>;
export declare const Link: (props: LinkProps) => JSX.Element;
export {};
