import type { Clerk, EnvironmentResource, SessionResource } from '@clerk/types';
type InitParams = {
    environment: EnvironmentResource;
    enablePolling?: boolean;
};
export declare class AuthenticationService {
    private clerk;
    private enablePolling;
    private cookies;
    private environment;
    private poller;
    constructor(clerk: Clerk);
    initAuth(opts: InitParams): Promise<void>;
    setAuthCookiesFromSession(session: SessionResource | undefined | null): Promise<void>;
    setAuthCookiesFromToken(token: string | undefined): void;
    private startPollingForToken;
    private refreshTokenOnVisibilityChange;
    private refreshSessionToken;
    private getNewToken;
    private setSessionCookie;
    private updateSessionCookie;
    private removeSessionCookie;
    private setClientUatCookieForDevelopmentInstances;
    private inCustomDevelopmentDomain;
    private clearLegacyAuthV1Cookies;
    private handleGetTokenError;
    private isUnauthorizedError;
    private isNetworkError;
}
export {};
